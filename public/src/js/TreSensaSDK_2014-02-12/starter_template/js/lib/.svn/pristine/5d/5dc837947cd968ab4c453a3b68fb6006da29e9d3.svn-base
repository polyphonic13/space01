/* Copyright (c) 2013 TreSensa, Inc. All Rights Reserved. */

TGS.Adapters.A0001=function(){TGS.Adapters.A0001.superclass.constructor.call(this);this._mUserOnline=true;this._mGameCenterCloseCallback=null;TGS.DataStore._sSaveToLocalStorage=true;TGS.DataStore._sSaveToTGSServer=false;TGS._sContinueOnPartnerInfoFail=true};TGS.Adapters.A0001.prototype={loginIcon:function(){return TGS._IMAGES_LOCATION+"ios_login.png"},supportsMicrotransactions:function(){return this._mUserOnline},allowsMicrotransactions:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase Manager - allowsMicrotransactions: "+this._isPurchaseAllowed);return this._isPurchaseAllowed},implementsLeaderboard:function(){return true},costFactor:function(){return 10},priceAsFormattedString:function(a){return"$"+((a*this.costFactor()/100)-0.01).toFixed(2)},setIAPProducts:function(){if(TGS.Microtransactions._sIAPProducts==null||TGS.Microtransactions._sIAPProducts.length<1){TGS.Microtransactions._sIAPProducts=[]}},initialize:function(){TGS.Debug.Log(TGS.Debug.LOG_INFO,"IOSAppStoreAdapter.initialize called, initializing iOS App Store Adapter");this._availableProducts=null;if(window.plugins){window.plugins.inAppPurchaseManager.onPurchased=this._onPurchase.bind(this);window.plugins.inAppPurchaseManager.onFailed=this._onPurchaseFailed.bind(this);window.plugins.inAppPurchaseManager.onRestored=this._onPurchaseRestored.bind(this);window.plugins.inAppPurchaseManager.onRestoreCompletedTransactionsFinished=this._onRestorePurchasesFinished.bind(this);window.plugins.inAppPurchaseManager.onRestoreCompletedTransactionsFailed=this._onRestorePurchasesFailed.bind(this);window.gameCenter.onshow=this._gameCenterOnShow.bind(this);window.gameCenter.onhide=this._gameCenterOnHide.bind(this);window.plugins.inAppPurchaseManager.canPurchase(this.userAllowsPurchase.bind(this));window.gameCenter.authenticate(this.authSuccess.bind(this),this.authFailure.bind(this))}this._mIsReady=true;if(this.onAdapterReady!==null){this.onAdapterReady.call()}},_onPurchase:function(c,b,a){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase Manager - onPurchased: "+b);var d=TGS.Microtransactions._PendingRequest;if(d){if(b!=d.item.partnerProductID){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"InAppPurchase Manager - onPurchased is waiting for "+d.item.partnerProductID+" but got "+b);d.internalErrorMessage="incorrect item id";TGS.Microtransactions._PartnerPurchaseFailed(d)}else{d.partnerTransactionID=c;TGS.Debug.Log(TGS.Debug.LOG_INFO,"Apple approved purchase of transaction "+d.transactionID+", "+d.partnerTransactionID);TGS.Microtransactions._PartnerPurchaseSuccessful(d)}}else{TGS.Debug.Log(TGS.Debug.LOG_ERROR,"InAppPurchase Manager - onPurchased has no pending request")}},_onPurchaseRestored:function(d,e,a){TGS.Debug.Log(TGS.Debug.LOG_INFO,"InAppPurchase Manager - restore purchase received for iOS sku "+e);TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"transactionIdentifier: "+d);TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"transactionReceipt: "+a);for(var c=0;c<TGS.Microtransactions._sIAPProducts.length;c++){var b=TGS.Microtransactions._sIAPProducts[c];if(b.partnerProductID==e){TGS.Microtransactions._RestorePurchaseCallback(b.id);return}}TGS.Debug.Log(TGS.Debug.LOG_ERROR,"did not recognize iOS sku "+e)},_onRestorePurchasesFinished:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"_onRestorePurchasesFinished called");TGS.Microtransactions._RestorePurchasesDone(true)},_onRestorePurchasesFailed:function(a){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"_onRestorePurchasesFailed called with error: "+a.toString());TGS.Microtransactions._RestorePurchasesDone(false)},_onPurchaseFailed:function(a,c){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"InAppPurchase Manager - failed: "+c);var b=TGS.Microtransactions._PendingRequest;if(b){b.internalErrorMessage=c;TGS.Microtransactions._PartnerPurchaseFailed(b)}},_gameCenterOnShow:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"GameCenter triggered onshow")},_gameCenterOnHide:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"GameCenter triggered onhide");if(this._mGameCenterCloseCallback){this._mGameCenterCloseCallback.call()}},initFacebook:function(){TGS.Debug.Log(TGS.Debug.LOG_INFO,"IOSAppStoreAdapter.initFacebook called");if(!window.FB||this._mFacebookInitialized||!this._mFacebookAppID||typeof(window.CDV)==="undefined"){return}TGS.Debug.Log(TGS.Debug.LOG_INFO,"IOSAppStoreAdapter.initFacebook calling FB.init, appId = "+this._mFacebookAppID);FB.init({appId:this._mFacebookAppID,nativeInterface:CDV.FB,useCachedDialogs:false});this._mFacebookInitialized=true},connect:function(a){TGS.Debug.Log(TGS.Debug.LOG_INFO,"IOSAppStoreAdapter.connect called");var b=true;for(var c in a){if(a.hasOwnProperty(c)){b=false;break}}if(b){TGS.Debug.Log(TGS.Debug.LOG_INFO,"TGS communication failed - user is probably offline");this._mUserOnline=false}if(!this._mFacebookInitialized){this.initFacebook()}if(this._mUserOnline&&window.plugins){this.setIAPProducts();this.getIAPProductsResponse(TGS.Microtransactions.GetIAPProducts(),null)}this.updateLocalStorageData();this.getLoginStatus()},getIAPProductsResponse:function(b,c){if(c!=null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"getIAPProducts error "+c.message)}else{if(b!=null&&b.length>0){TGS.Debug.Log(TGS.Debug.LOG_INFO,"getIAPProducts success with "+b);this._availableProducts=b;var a=[];for(var d=0;d<b.length;d++){var e=b[d];if(e.partnerProductID!=null&&e.partnerProductID.length>0){a[d]=e.partnerProductID;TGS.Debug.Log(TGS.Debug.LOG_INFO,"getIAPProducts added "+e.partnerProductID)}else{TGS.Debug.Log(TGS.Debug.LOG_ERROR,"getIAPProducts error partnerProductID is null for "+e.title)}}if(a.length>0){this.getIAPProductsInfo(a)}else{TGS.Debug.Log(TGS.Debug.LOG_ERROR,"getIAPProducts no products defined!")}}else{TGS.Debug.Log(TGS.Debug.LOG_ERROR,"getIAPProducts got no products!");this._availableProducts=null}}},getIAPProductsInfo:function(a){if(Object.prototype.toString.call(a).slice(8,-1)==="String"){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"Calling IAP requestProductData");window.plugins.inAppPurchaseManager.requestProductData(a,function(b,e,d,c){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase Manager - productId: "+b+" title: "+e+" description: "+d+" price: "+c)},function(b){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"InAppPurchase Manager - Invalid product id: "+b)})}else{TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"Calling IAP requestProductsData");window.plugins.inAppPurchaseManager.requestProductsData(a,function(e,c){var f="";for(var b=0;b<e.length;b++){if(f.length>0){f+=", "}else{f+="["}var d=e[b];f+='{id:"'+d.id+'", decription:"'+d.description+'", price:"'+d.price+'"}'}f+="]";if(c!=null&&c.length>0){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase requestProductsData: "+f+"; Invalids="+c)}else{TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase requestProductsData: "+f)}})}},userAllowsPurchase:function(a){this._isPurchaseAllowed=a;TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchase Manager - canPurchase: "+this._isPurchaseAllowed)},purchaseItem:function(b){TGS.Debug.Log(TGS.Debug.LOG_INFO,"iOS purchase request for "+b.item.id+" ("+b.item.partnerProductID+").");var a=b.item.partnerProductID;var c=1;window.plugins.inAppPurchaseManager.makePurchase(a,c)},restorePurchases:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"InAppPurchaseManager calling restoreCompletedTransactions...");window.plugins.inAppPurchaseManager.restoreCompletedTransactions()},submitScore:function(b){var d=b.leaderboardID?b.leaderboardID:0;var a=TGS.Leaderboard.GetLeaderboardDescriptor(d);if(a===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no data found for leaderboard id "+b.leaderboardID);return}var c=a.partnerLeaderboardID;if(c===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no iOS sku found for leaderboard id "+b.leaderboardID);return}if(!window.gameCenter){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter module is not available");return}TGS.Debug.Log(TGS.Debug.LOG_INFO,"submitting score "+b.score+" to GameCenter leaderboard "+c);window.gameCenter.reportScore(c,b.score,this.scoreSuccess.bind(this),this.scoreFailure.bind(this))},showLeaderboard:function(b){var d=b.leaderboardID?b.leaderboardID:0;var a=TGS.Leaderboard.GetLeaderboardDescriptor(d);if(a===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no data found for leaderboard id "+b.leaderboardID);return}var c=a.partnerLeaderboardID;if(c===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no iOS sku found for leaderboard id "+b.leaderboardID);return}if(!window.gameCenter){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter module is not available");return}this._mGameCenterCloseCallback=b.onClose;TGS.Debug.Log(TGS.Debug.LOG_INFO,"showing GameCenter leaderboard "+c+"...");window.gameCenter.showLeaderboard(c)},submitScoreAndShow:function(b){var d=b.leaderboardID?b.leaderboardID:0;var a=TGS.Leaderboard.GetLeaderboardDescriptor(d);if(a===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no data found for leaderboard id "+b.leaderboardID);return}var c=a.partnerLeaderboardID;if(c===null){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"no iOS sku found for leaderboard id "+b.leaderboardID);return}if(!window.gameCenter){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter module is not available");return}this._mGameCenterCloseCallback=b.onClose;TGS.Debug.Log(TGS.Debug.LOG_INFO,"submitting score "+b.score+" to GameCenter leaderboard "+c);window.gameCenter.reportScore(c,b.score,this.scoreSuccessShowLeaderboard.bind(this,c),this.scoreFailure.bind(this))},achievementEarned:function(a){},scoreSuccessShowLeaderboard:function(a){TGS.Debug.Log(TGS.Debug.LOG_INFO,"GameCenter score reported, showing leaderboard...");window.gameCenter.showLeaderboard(a)},scoreSuccess:function(){TGS.Debug.Log(TGS.Debug.LOG_INFO,"GameCenter score reported")},scoreFailure:function(a){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter score failure: "+a)},achievementSuccess:function(){window.gameCenter.showAchievements();TGS.Debug.Log(TGS.Debug.LOG_INFO,"GameCenter get achievement success")},achievementFailure:function(a){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter get achievement failure:\n"+a)},authSuccess:function(){TGS.Debug.Log(TGS.Debug.LOG_INFO,"GameCenter Authentication success")},authFailure:function(a){TGS.Debug.Log(TGS.Debug.LOG_ERROR,"GameCenter Authentication failure:\n"+a+"\nPlease sign in using the Game Center application")},requestAuthorization:function(){TGS.Debug.Log(TGS.Debug.LOG_VERBOSE,"GameCenter requestAuthorization called");window.gameCenter.authenticate(this.authSuccess.bind(this),this.authFailure.bind(this))}};extend(TGS.Adapters.A0001,TGS.PartnerBridge);